<!DOCTYPE html>
<html>

<head>
    <title>VCockpit</title>
    <meta charset="utf-8" />

    <script type="text/javascript"
        src="https://cdn.jsdelivr.net/npm/@webcomponents/html-imports@1.3.0/src/html-imports.js"></script>

    <!-- <link rel="stylesheet" href="/SCSS/common.css" /> -->

    <script type="text/javascript" src="/JS/coherent.js"></script>
    <script type="text/javascript" src="/JS/common.js"></script>
    <script type="text/javascript" src="/JS/Types.js"></script>
    <script type="text/javascript" src="/JS/simvar.js"></script>
    <script type="text/javascript" src="/JS/avionics.js"></script>
    <script type="text/javascript" src="/JS/simplane.js"></script>
    <script type="text/javascript" src="/JS/Services/GenericDataListener.js"></script>


    <script type="text/javascript" src="/Pages/VCockpit/Instruments/Shared/BaseInstrument.js"></script>
    <script type="text/javascript" src="/Pages/VCockpit/Instruments/Shared/Utils/XMLLogic.js"></script>

    <script type="text/javascript" src="VCockpit.js"></script>
    <script type="text/javascript" src="/JS/IncludeMgr.js"></script>
    <script type="text/javascript" src="/JS/variables.js"></script>
    <script type="text/javascript" src="/JS/utils.js"></script>
    <script type="text/javascript" src="/JS/leaflet-1.7.1/leaflet.js"></script>
    <script type="text/javascript" src="/JS/leaflet-1.7.1/leaflet.rotatedMarker.js"></script>
    <link rel="stylesheet" href="/JS/leaflet-1.7.1/leaflet.orig.css" />
    <script type="text/javascript" src="/JS/leaflet_map.js"></script>

    <style>
        /* body {
    font-family: roboto-bold;
    margin: 0;
    color: whitesmoke;
    background-color: #1a1d2100;
    overflow: hidden;
    transform: scale(1, 1); transform-origin: 0 0;
} */
    </style>
</head>

<!-- <body style="transform: scale(1, 1); transform-origin: 0 0;background-color: black"> -->

<body style="background-color: black">
    <script>
        class SimVarList {
            items;
            constructor() {
                this.items = {};
            }
            add(key, value) {
                this.items[key] = value;
            }
            has(key) {
                return key in this.items;
            }
            get(key) {
                return this.items[key];
            }
        }

        class MessageType {
            clientId;
            topic;
            payload;
            timestamp;
        }

        class WSConn {
            onMessage;
            onWebSocketError;
            clientId = "Client" + performance.now().toString();
            webSocket = undefined;
            connected = false;
            variables = new SimVarList();
            constructor() {
                console.log("WSConn");
            }
            connect() {
                //this.webSocket = new WebSocket("ws://192.168.1.110:5000/SimChannel");
                var url = "ws://" + document.location.host + "/SimChannel"
                this.webSocket = new WebSocket(url);
                this.webSocket.onerror = this.error.bind(this);
                this.webSocket.onmessage = this.message.bind(this);
                this.webSocket.onopen = ((e) => {
                    this.send("client/hello", "hello");
                    this.connected = true;
                }).bind(this);
                this.webSocket.onclose = ((e) => {
                    this.connected = false;
                    console.log("Websocket closed => reconnect");
                    setTimeout((() => {
                        this.connect();
                    }).bind(this), 1000);
                }).bind(this);
            }
            message(msg) {
                var m = JSON.parse(msg.data);

                if (m.topic == "sim/simvar") {
                    var obj = JSON.parse(m.payload);
                    var simvar = this.variables.items[obj.simvar];
                    if (simvar) {
                        simvar.value = obj.value;
                    }
                    else {
                    }
                }

            }
            send(topic, payload) {
                if (this.webSocket.readyState == WebSocket.OPEN) {
                    var msg = new MessageType();
                    msg.clientId = this.clientId;
                    msg.topic = topic;
                    msg.payload = payload;
                    msg.timestamp = performance.now();
                    this.webSocket.send(JSON.stringify(msg));
                }
            }
            error(e) {
                console.log("WS Error: ", e);
                if (this.onWebSocketError) {
                    document.getElementById("logo").style.display = "block";
                }
                this.webSocket.close();
            }
        }


        var FSConn = new WSConn()
        FSConn.connect()

        let data = new VCockpitPanelData();
        data.sName = "VCockpit01";
        data.vLogicalSize = new Vec2(1024, 768);
        data.vDisplaySize = new Vec2(1024, 768);
        data.daAttributes = [];
        data.daInstruments = [];
        let instrument = new VCockpitInstrumentData();
        instrument.iGUId = 0;
        instrument.sUrl = "NavSystems/AS1000/PFD/AS1000_PFD.html";

        var xmlUrl = "/asobo-aircraft-c172sp-as1000/SimObjects/Airplanes/Asobo_C172sp_AS1000/panel/panel.xml"
        var xmlconfig = readXml(xmlUrl).documentElement.outerHTML
        data.sConfigFile = xmlconfig

        instrument.templateName = "";
        instrument.vPosAndSize = { x: 160, y: 0, z: 1024, w: 768 };
        data.daInstruments.push(instrument);

        var globalPanelData = data
        function ReadSimVar(name, unit, dataSource = "", src = "simvar") {

            if (FSConn.connected) {
                var sv = FSConn.variables.items[name + "/" + unit]
                if (sv) {
                    return sv.value
                } else {
                    sv = { name: name, unit: unit, dataSource: dataSource, src: src, value: 0 }
                    if (unit == "GlassCockpitSettings") {
                        sv.value = { "__Type": "GlassCockpitSettings", "FuelFlow": { "__Type": "ColorRangeDisplay", "Initialized": 1, "min": 0, "max": 20, "lowLimit": 0, "highLimit": 0, "greenStart": 0, "greenEnd": 12 }, "FuelQuantity": { "__Type": "ColorRangeDisplay2", "Initialized": 1, "min": 0, "max": 24, "lowLimit": 0, "highLimit": 0, "greenStart": 5, "greenEnd": 24, "yellowStart": 1.5, "yellowEnd": 5, "redStart": 0, "redEnd": 3 }, "FuelTemperature": { "__Type": "ColorRangeDisplay3", "Initialized": 0, "min": 0, "max": 0, "lowLimit": 0, "highLimit": 0, "lowRedStart": 0, "lowRedEnd": 0, "lowYellowStart": 0, "lowYellowEnd": 0, "greenStart": 0, "greenEnd": 0, "yellowStart": 0, "yellowEnd": 0, "redStart": 0, "redEnd": 0 }, "FuelPressure": { "__Type": "ColorRangeDisplay3", "Initialized": 0, "min": 0, "max": 0, "lowLimit": 0, "highLimit": 0, "lowRedStart": 0, "lowRedEnd": 0, "lowYellowStart": 0, "lowYellowEnd": 0, "greenStart": 0, "greenEnd": 0, "yellowStart": 0, "yellowEnd": 0, "redStart": 0, "redEnd": 0 }, "OilPressure": { "__Type": "ColorRangeDisplay3", "Initialized": 1, "min": 0, "max": 120, "lowLimit": 20, "highLimit": 115, "lowRedStart": 0, "lowRedEnd": 20, "lowYellowStart": 0, "lowYellowEnd": 0, "greenStart": 50, "greenEnd": 90, "yellowStart": 0, "yellowEnd": 0, "redStart": 115, "redEnd": 120 }, "OilTemperature": { "__Type": "ColorRangeDisplay3", "Initialized": 1, "min": 100, "max": 250, "lowLimit": 100, "highLimit": 245, "lowRedStart": 0, "lowRedEnd": 0, "lowYellowStart": 0, "lowYellowEnd": 0, "greenStart": 100, "greenEnd": 245, "yellowStart": 0, "yellowEnd": 0, "redStart": 0, "redEnd": 0 }, "EGTTemperature": { "__Type": "ColorRangeDisplay2", "Initialized": 1, "min": 1250, "max": 1650, "lowLimit": 0, "highLimit": 0, "greenStart": 0, "greenEnd": 0, "yellowStart": 0, "yellowEnd": 0, "redStart": 0, "redEnd": 0 }, "CHTTemperature": { "__Type": "ColorRangeDisplay2", "Initialized": 0, "min": 0, "max": 0, "lowLimit": 0, "highLimit": 0, "greenStart": 0, "greenEnd": 0, "yellowStart": 0, "yellowEnd": 0, "redStart": 0, "redEnd": 0 }, "Vacuum": { "__Type": "ColorRangeDisplay", "Initialized": 1, "min": 3.5, "max": 7, "lowLimit": 0, "highLimit": 0, "greenStart": 4.5, "greenEnd": 5.5 }, "ManifoldPressure": { "__Type": "ColorRangeDisplay", "Initialized": 0, "min": 0, "max": 0, "lowLimit": 0, "highLimit": 0, "greenStart": 0, "greenEnd": 0 }, "AirSpeed": { "__Type": "ColorRangeDisplay4", "Initialized": 1, "min": 0, "max": 203, "lowLimit": 0, "highLimit": 163, "whiteStart": 40, "whiteEnd": 85, "greenStart": 48, "greenEnd": 129, "yellowStart": 129, "yellowEnd": 163, "redStart": 0, "redEnd": 40 }, "Torque": { "__Type": "ColorRangeDisplay2", "Initialized": 0, "min": 0, "max": 0, "lowLimit": 0, "highLimit": 0, "greenStart": 0, "greenEnd": 0, "yellowStart": 0, "yellowEnd": 0, "redStart": 0, "redEnd": 0 }, "RPM": { "__Type": "ColorRangeDisplay2", "Initialized": 1, "min": 0, "max": 3000, "lowLimit": 0, "highLimit": 0, "greenStart": 2100, "greenEnd": 2600, "yellowStart": 0, "yellowEnd": 0, "redStart": 2700, "redEnd": 3000 }, "TurbineNg": { "__Type": "ColorRangeDisplay2", "Initialized": 0, "min": 0, "max": 0, "lowLimit": 0, "highLimit": 0, "greenStart": 0, "greenEnd": 0, "yellowStart": 0, "yellowEnd": 0, "redStart": 0, "redEnd": 0 }, "ITTEngineOff": { "__Type": "ColorRangeDisplay3", "Initialized": 0, "min": 0, "max": 0, "lowLimit": 0, "highLimit": 0, "lowRedStart": 0, "lowRedEnd": 0, "lowYellowStart": 0, "lowYellowEnd": 0, "greenStart": 0, "greenEnd": 0, "yellowStart": 0, "yellowEnd": 0, "redStart": 0, "redEnd": 0 }, "ITTEngineOn": { "__Type": "ColorRangeDisplay3", "Initialized": 0, "min": 0, "max": 0, "lowLimit": 0, "highLimit": 0, "lowRedStart": 0, "lowRedEnd": 0, "lowYellowStart": 0, "lowYellowEnd": 0, "greenStart": 0, "greenEnd": 0, "yellowStart": 0, "yellowEnd": 0, "redStart": 0, "redEnd": 0 }, "MainBusVoltage": { "__Type": "ColorRangeDisplay3", "Initialized": 0, "min": 0, "max": 0, "lowLimit": 0, "highLimit": 0, "lowRedStart": 0, "lowRedEnd": 0, "lowYellowStart": 0, "lowYellowEnd": 0, "greenStart": 0, "greenEnd": 0, "yellowStart": 0, "yellowEnd": 0, "redStart": 0, "redEnd": 0 }, "HotBatteryBusVoltage": { "__Type": "ColorRangeDisplay3", "Initialized": 0, "min": 0, "max": 0, "lowLimit": 0, "highLimit": 0, "lowRedStart": 0, "lowRedEnd": 0, "lowYellowStart": 0, "lowYellowEnd": 0, "greenStart": 0, "greenEnd": 0, "yellowStart": 0, "yellowEnd": 0, "redStart": 0, "redEnd": 0 }, "BatteryBusAmps": { "__Type": "ColorRangeDisplay2", "Initialized": 0, "min": 0, "max": 0, "lowLimit": 0, "highLimit": 0, "greenStart": 0, "greenEnd": 0, "yellowStart": 0, "yellowEnd": 0, "redStart": 0, "redEnd": 0 }, "GenAltBusAmps": { "__Type": "ColorRangeDisplay2", "Initialized": 0, "min": 0, "max": 0, "lowLimit": 0, "highLimit": 0, "greenStart": 0, "greenEnd": 0, "yellowStart": 0, "yellowEnd": 0, "redStart": 0, "redEnd": 0 }, "CoolantLevel": { "__Type": "RangeDisplay", "min": 0, "max": 0, "lowLimit": 0, "highLimit": 0 }, "CoolantTemperature": { "__Type": "ColorRangeDisplay3", "Initialized": 0, "min": 0, "max": 0, "lowLimit": 0, "highLimit": 0, "lowRedStart": 0, "lowRedEnd": 0, "lowYellowStart": 0, "lowYellowEnd": 0, "greenStart": 0, "greenEnd": 0, "yellowStart": 0, "yellowEnd": 0, "redStart": 0, "redEnd": 0 }, "GearOilTemperature": { "__Type": "ColorRangeDisplay2", "Initialized": 0, "min": 0, "max": 0, "lowLimit": 0, "highLimit": 0, "greenStart": 0, "greenEnd": 0, "yellowStart": 0, "yellowEnd": 0, "redStart": 0, "redEnd": 0 }, "CabinAltitude": { "__Type": "ColorRangeDisplay", "Initialized": 0, "min": 0, "max": 0, "lowLimit": 0, "highLimit": 0, "greenStart": 0, "greenEnd": 0 }, "CabinAltitudeChangeRate": { "__Type": "RangeDisplay", "min": 0, "max": 0, "lowLimit": 0, "highLimit": 0 }, "CabinPressureDiff": { "__Type": "ColorRangeDisplay", "Initialized": 0, "min": 0, "max": 0, "lowLimit": 0, "highLimit": 0, "greenStart": 0, "greenEnd": 0 }, "ThrottleLevels": { "__Type": "ThrottleLevelsInfo", "initialised": 0, "minValues": [0, 0, 0, 0, 0, 0], "names": ["", "", "", "", "", ""] }, "FlapsLevels": { "__Type": "FlapsLevelsInfo", "initialised": 0, "slatsAngle": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "flapsAngle": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }, "TakeOffSpeeds": { "__Type": "TakeOffSpeedsInfo", "initialised": 1, "minVal": 65, "minWeight": 0, "maxVal": 75, "maxWeight": 0 }, "Misc": { "__Type": "GlassCockpitMisc", "initialised": 1, "hasGMeter": 0 } }

                        sv.value2 = JSON.parse("{\"__Type\":\"GlassCockpitSettings\",\"FuelFlow\":{\"__Type\":\"ColorRangeDisplay\",\"Initialized\":0,\"min\":0,\"max\":0,\"lowLimit\":0,\"highLimit\":0,\"greenStart\":0,\"greenEnd\":0},\"FuelQuantity\":{\"__Type\":\"ColorRangeDisplay2\",\"Initialized\":0,\"min\":0,\"max\":0,\"lowLimit\":0,\"highLimit\":0,\"greenStart\":0,\"greenEnd\":0,\"yellowStart\":0,\"yellowEnd\":0,\"redStart\":0,\"redEnd\":0},\"FuelTemperature\":{\"__Type\":\"ColorRangeDisplay3\",\"Initialized\":0,\"min\":0,\"max\":0,\"lowLimit\":0,\"highLimit\":0,\"lowRedStart\":0,\"lowRedEnd\":0,\"lowYellowStart\":0,\"lowYellowEnd\":0,\"greenStart\":0,\"greenEnd\":0,\"yellowStart\":0,\"yellowEnd\":0,\"redStart\":0,\"redEnd\":0},\"FuelPressure\":{\"__Type\":\"ColorRangeDisplay3\",\"Initialized\":0,\"min\":0,\"max\":0,\"lowLimit\":0,\"highLimit\":0,\"lowRedStart\":0,\"lowRedEnd\":0,\"lowYellowStart\":0,\"lowYellowEnd\":0,\"greenStart\":0,\"greenEnd\":0,\"yellowStart\":0,\"yellowEnd\":0,\"redStart\":0,\"redEnd\":0},\"OilPressure\":{\"__Type\":\"ColorRangeDisplay3\",\"Initialized\":0,\"min\":0,\"max\":0,\"lowLimit\":0,\"highLimit\":0,\"lowRedStart\":0,\"lowRedEnd\":0,\"lowYellowStart\":0,\"lowYellowEnd\":0,\"greenStart\":0,\"greenEnd\":0,\"yellowStart\":0,\"yellowEnd\":0,\"redStart\":0,\"redEnd\":0},\"OilTemperature\":{\"__Type\":\"ColorRangeDisplay3\",\"Initialized\":0,\"min\":0,\"max\":0,\"lowLimit\":0,\"highLimit\":0,\"lowRedStart\":0,\"lowRedEnd\":0,\"lowYellowStart\":0,\"lowYellowEnd\":0,\"greenStart\":0,\"greenEnd\":0,\"yellowStart\":0,\"yellowEnd\":0,\"redStart\":0,\"redEnd\":0},\"EGTTemperature\":{\"__Type\":\"ColorRangeDisplay2\",\"Initialized\":0,\"min\":0,\"max\":0,\"lowLimit\":0,\"highLimit\":0,\"greenStart\":0,\"greenEnd\":0,\"yellowStart\":0,\"yellowEnd\":0,\"redStart\":0,\"redEnd\":0},\"CHTTemperature\":{\"__Type\":\"ColorRangeDisplay2\",\"Initialized\":0,\"min\":0,\"max\":0,\"lowLimit\":0,\"highLimit\":0,\"greenStart\":0,\"greenEnd\":0,\"yellowStart\":0,\"yellowEnd\":0,\"redStart\":0,\"redEnd\":0},\"Vacuum\":{\"__Type\":\"ColorRangeDisplay\",\"Initialized\":0,\"min\":0,\"max\":0,\"lowLimit\":0,\"highLimit\":0,\"greenStart\":0,\"greenEnd\":0},\"ManifoldPressure\":{\"__Type\":\"ColorRangeDisplay\",\"Initialized\":0,\"min\":0,\"max\":0,\"lowLimit\":0,\"highLimit\":0,\"greenStart\":0,\"greenEnd\":0},\"AirSpeed\":{\"__Type\":\"ColorRangeDisplay4\",\"Initialized\":1,\"min\":0,\"max\":240,\"lowLimit\":0,\"highLimit\":240,\"whiteStart\":68,\"whiteEnd\":105,\"greenStart\":74,\"greenEnd\":177,\"yellowStart\":178,\"yellowEnd\":221,\"redStart\":223,\"redEnd\":224},\"Torque\":{\"__Type\":\"ColorRangeDisplay2\",\"Initialized\":0,\"min\":0,\"max\":0,\"lowLimit\":0,\"highLimit\":0,\"greenStart\":0,\"greenEnd\":0,\"yellowStart\":0,\"yellowEnd\":0,\"redStart\":0,\"redEnd\":0},\"RPM\":{\"__Type\":\"ColorRangeDisplay2\",\"Initialized\":0,\"min\":0,\"max\":0,\"lowLimit\":0,\"highLimit\":0,\"greenStart\":0,\"greenEnd\":0,\"yellowStart\":0,\"yellowEnd\":0,\"redStart\":0,\"redEnd\":0},\"TurbineNg\":{\"__Type\":\"ColorRangeDisplay2\",\"Initialized\":0,\"min\":0,\"max\":0,\"lowLimit\":0,\"highLimit\":0,\"greenStart\":0,\"greenEnd\":0,\"yellowStart\":0,\"yellowEnd\":0,\"redStart\":0,\"redEnd\":0},\"TurbineN1\":{\"__Type\":\"ColorRangeDisplay2\",\"Initialized\":0,\"min\":0,\"max\":0,\"lowLimit\":0,\"highLimit\":0,\"greenStart\":0,\"greenEnd\":0,\"yellowStart\":0,\"yellowEnd\":0,\"redStart\":0,\"redEnd\":0},\"TurbineN2\":{\"__Type\":\"ColorRangeDisplay2\",\"Initialized\":0,\"min\":0,\"max\":0,\"lowLimit\":0,\"highLimit\":0,\"greenStart\":0,\"greenEnd\":0,\"yellowStart\":0,\"yellowEnd\":0,\"redStart\":0,\"redEnd\":0},\"ITTEngineOff\":{\"__Type\":\"ColorRangeDisplay3\",\"Initialized\":0,\"min\":0,\"max\":0,\"lowLimit\":0,\"highLimit\":0,\"lowRedStart\":0,\"lowRedEnd\":0,\"lowYellowStart\":0,\"lowYellowEnd\":0,\"greenStart\":0,\"greenEnd\":0,\"yellowStart\":0,\"yellowEnd\":0,\"redStart\":0,\"redEnd\":0},\"ITTEngineOn\":{\"__Type\":\"ColorRangeDisplay3\",\"Initialized\":0,\"min\":0,\"max\":0,\"lowLimit\":0,\"highLimit\":0,\"lowRedStart\":0,\"lowRedEnd\":0,\"lowYellowStart\":0,\"lowYellowEnd\":0,\"greenStart\":0,\"greenEnd\":0,\"yellowStart\":0,\"yellowEnd\":0,\"redStart\":0,\"redEnd\":0},\"MainBusVoltage\":{\"__Type\":\"ColorRangeDisplay3\",\"Initialized\":0,\"min\":0,\"max\":0,\"lowLimit\":0,\"highLimit\":0,\"lowRedStart\":0,\"lowRedEnd\":0,\"lowYellowStart\":0,\"lowYellowEnd\":0,\"greenStart\":0,\"greenEnd\":0,\"yellowStart\":0,\"yellowEnd\":0,\"redStart\":0,\"redEnd\":0},\"HotBatteryBusVoltage\":{\"__Type\":\"ColorRangeDisplay3\",\"Initialized\":0,\"min\":0,\"max\":0,\"lowLimit\":0,\"highLimit\":0,\"lowRedStart\":0,\"lowRedEnd\":0,\"lowYellowStart\":0,\"lowYellowEnd\":0,\"greenStart\":0,\"greenEnd\":0,\"yellowStart\":0,\"yellowEnd\":0,\"redStart\":0,\"redEnd\":0},\"BatteryBusAmps\":{\"__Type\":\"ColorRangeDisplay2\",\"Initialized\":0,\"min\":0,\"max\":0,\"lowLimit\":0,\"highLimit\":0,\"greenStart\":0,\"greenEnd\":0,\"yellowStart\":0,\"yellowEnd\":0,\"redStart\":0,\"redEnd\":0},\"GenAltBusAmps\":{\"__Type\":\"ColorRangeDisplay2\",\"Initialized\":0,\"min\":0,\"max\":0,\"lowLimit\":0,\"highLimit\":0,\"greenStart\":0,\"greenEnd\":0,\"yellowStart\":0,\"yellowEnd\":0,\"redStart\":0,\"redEnd\":0},\"CoolantLevel\":{\"__Type\":\"RangeDisplay\",\"min\":0,\"max\":0,\"lowLimit\":0,\"highLimit\":0},\"CoolantTemperature\":{\"__Type\":\"ColorRangeDisplay3\",\"Initialized\":0,\"min\":0,\"max\":0,\"lowLimit\":0,\"highLimit\":0,\"lowRedStart\":0,\"lowRedEnd\":0,\"lowYellowStart\":0,\"lowYellowEnd\":0,\"greenStart\":0,\"greenEnd\":0,\"yellowStart\":0,\"yellowEnd\":0,\"redStart\":0,\"redEnd\":0},\"GearOilTemperature\":{\"__Type\":\"ColorRangeDisplay2\",\"Initialized\":0,\"min\":0,\"max\":0,\"lowLimit\":0,\"highLimit\":0,\"greenStart\":0,\"greenEnd\":0,\"yellowStart\":0,\"yellowEnd\":0,\"redStart\":0,\"redEnd\":0},\"CabinAltitude\":{\"__Type\":\"ColorRangeDisplay\",\"Initialized\":0,\"min\":0,\"max\":0,\"lowLimit\":0,\"highLimit\":0,\"greenStart\":0,\"greenEnd\":0},\"CabinAltitudeChangeRate\":{\"__Type\":\"RangeDisplay\",\"min\":0,\"max\":0,\"lowLimit\":0,\"highLimit\":0},\"CabinPressureDiff\":{\"__Type\":\"ColorRangeDisplay\",\"Initialized\":0,\"min\":0,\"max\":0,\"lowLimit\":0,\"highLimit\":0,\"greenStart\":0,\"greenEnd\":0},\"ThrottleLevels\":{\"__Type\":\"ThrottleLevelsInfo\",\"initialised\":0,\"minValues\":[0,0,0,0,0,0],\"names\":[\"\",\"\",\"\",\"\",\"\",\"\"]},\"FlapsLevels\":{\"__Type\":\"FlapsLevelsInfo\",\"initialised\":0,\"slatsAngle\":[0,0,0,0,0,0,0,0,0,0],\"flapsAngle\":[0,0,0,0,0,0,0,0,0,0]},\"TakeOffSpeeds\":{\"__Type\":\"TakeOffSpeedsInfo\",\"initialised\":1,\"minVal\":90,\"minWeight\":90,\"maxVal\":100,\"maxWeight\":100},\"Misc\":{\"__Type\":\"GlassCockpitMisc\",\"initialised\":1,\"hasGMeter\":0,\"vCockpitHud\":0,\"highAltitudeHud\":0,\"hudAirspeedColorFromLVar\":0,\"hudShowFuel\":1,\"hudShowAOA\":1,\"hudShowTachometer\":1,\"hudShowTrim\":1,\"hudSpeedInMach\":0,\"equivalentAirspeedHud\":0,\"hudNavyAOA\":0,\"gpsAltimeterHud\":0}}")
                        {
                            sv.value = {
                                "__Type": "GlassCockpitSettings",
                                "FuelFlow": {
                                    "__Type": "ColorRangeDisplay",
                                    "Initialized": 0,
                                    "min": 0,
                                    "max": 0,
                                    "lowLimit": 0,
                                    "highLimit": 0,
                                    "greenStart": 0,
                                    "greenEnd": 0
                                },
                                "FuelQuantity": {
                                    "__Type": "ColorRangeDisplay2",
                                    "Initialized": 0,
                                    "min": 0,
                                    "max": 0,
                                    "lowLimit": 0,
                                    "highLimit": 0,
                                    "greenStart": 0,
                                    "greenEnd": 0,
                                    "yellowStart": 0,
                                    "yellowEnd": 0,
                                    "redStart": 0,
                                    "redEnd": 0
                                },
                                "FuelTemperature": {
                                    "__Type": "ColorRangeDisplay3",
                                    "Initialized": 0,
                                    "min": 0,
                                    "max": 0,
                                    "lowLimit": 0,
                                    "highLimit": 0,
                                    "lowRedStart": 0,
                                    "lowRedEnd": 0,
                                    "lowYellowStart": 0,
                                    "lowYellowEnd": 0,
                                    "greenStart": 0,
                                    "greenEnd": 0,
                                    "yellowStart": 0,
                                    "yellowEnd": 0,
                                    "redStart": 0,
                                    "redEnd": 0
                                },
                                "FuelPressure": {
                                    "__Type": "ColorRangeDisplay3",
                                    "Initialized": 0,
                                    "min": 0,
                                    "max": 0,
                                    "lowLimit": 0,
                                    "highLimit": 0,
                                    "lowRedStart": 0,
                                    "lowRedEnd": 0,
                                    "lowYellowStart": 0,
                                    "lowYellowEnd": 0,
                                    "greenStart": 0,
                                    "greenEnd": 0,
                                    "yellowStart": 0,
                                    "yellowEnd": 0,
                                    "redStart": 0,
                                    "redEnd": 0
                                },
                                "OilPressure": {
                                    "__Type": "ColorRangeDisplay3",
                                    "Initialized": 0,
                                    "min": 0,
                                    "max": 0,
                                    "lowLimit": 0,
                                    "highLimit": 0,
                                    "lowRedStart": 0,
                                    "lowRedEnd": 0,
                                    "lowYellowStart": 0,
                                    "lowYellowEnd": 0,
                                    "greenStart": 0,
                                    "greenEnd": 0,
                                    "yellowStart": 0,
                                    "yellowEnd": 0,
                                    "redStart": 0,
                                    "redEnd": 0
                                },
                                "OilTemperature": {
                                    "__Type": "ColorRangeDisplay3",
                                    "Initialized": 0,
                                    "min": 0,
                                    "max": 0,
                                    "lowLimit": 0,
                                    "highLimit": 0,
                                    "lowRedStart": 0,
                                    "lowRedEnd": 0,
                                    "lowYellowStart": 0,
                                    "lowYellowEnd": 0,
                                    "greenStart": 0,
                                    "greenEnd": 0,
                                    "yellowStart": 0,
                                    "yellowEnd": 0,
                                    "redStart": 0,
                                    "redEnd": 0
                                },
                                "EGTTemperature": {
                                    "__Type": "ColorRangeDisplay2",
                                    "Initialized": 0,
                                    "min": 0,
                                    "max": 0,
                                    "lowLimit": 0,
                                    "highLimit": 0,
                                    "greenStart": 0,
                                    "greenEnd": 0,
                                    "yellowStart": 0,
                                    "yellowEnd": 0,
                                    "redStart": 0,
                                    "redEnd": 0
                                },
                                "CHTTemperature": {
                                    "__Type": "ColorRangeDisplay2",
                                    "Initialized": 0,
                                    "min": 0,
                                    "max": 0,
                                    "lowLimit": 0,
                                    "highLimit": 0,
                                    "greenStart": 0,
                                    "greenEnd": 0,
                                    "yellowStart": 0,
                                    "yellowEnd": 0,
                                    "redStart": 0,
                                    "redEnd": 0
                                },
                                "Vacuum": {
                                    "__Type": "ColorRangeDisplay",
                                    "Initialized": 0,
                                    "min": 0,
                                    "max": 0,
                                    "lowLimit": 0,
                                    "highLimit": 0,
                                    "greenStart": 0,
                                    "greenEnd": 0
                                },
                                "ManifoldPressure": {
                                    "__Type": "ColorRangeDisplay",
                                    "Initialized": 0,
                                    "min": 0,
                                    "max": 0,
                                    "lowLimit": 0,
                                    "highLimit": 0,
                                    "greenStart": 0,
                                    "greenEnd": 0
                                },
                                "AirSpeed": {
                                    "__Type": "ColorRangeDisplay4",
                                    "Initialized": 1,
                                    "min": 0,
                                    "max": 240,
                                    "lowLimit": 0,
                                    "highLimit": 240,
                                    "whiteStart": 68,
                                    "whiteEnd": 105,
                                    "greenStart": 74,
                                    "greenEnd": 177,
                                    "yellowStart": 178,
                                    "yellowEnd": 221,
                                    "redStart": 223,
                                    "redEnd": 224
                                },
                                "Torque": {
                                    "__Type": "ColorRangeDisplay2",
                                    "Initialized": 0,
                                    "min": 0,
                                    "max": 0,
                                    "lowLimit": 0,
                                    "highLimit": 0,
                                    "greenStart": 0,
                                    "greenEnd": 0,
                                    "yellowStart": 0,
                                    "yellowEnd": 0,
                                    "redStart": 0,
                                    "redEnd": 0
                                },
                                "RPM": {
                                    "__Type": "ColorRangeDisplay2",
                                    "Initialized": 0,
                                    "min": 0,
                                    "max": 0,
                                    "lowLimit": 0,
                                    "highLimit": 0,
                                    "greenStart": 0,
                                    "greenEnd": 0,
                                    "yellowStart": 0,
                                    "yellowEnd": 0,
                                    "redStart": 0,
                                    "redEnd": 0
                                },
                                "TurbineNg": {
                                    "__Type": "ColorRangeDisplay2",
                                    "Initialized": 0,
                                    "min": 0,
                                    "max": 0,
                                    "lowLimit": 0,
                                    "highLimit": 0,
                                    "greenStart": 0,
                                    "greenEnd": 0,
                                    "yellowStart": 0,
                                    "yellowEnd": 0,
                                    "redStart": 0,
                                    "redEnd": 0
                                },
                                "TurbineN1": {
                                    "__Type": "ColorRangeDisplay2",
                                    "Initialized": 0,
                                    "min": 0,
                                    "max": 0,
                                    "lowLimit": 0,
                                    "highLimit": 0,
                                    "greenStart": 0,
                                    "greenEnd": 0,
                                    "yellowStart": 0,
                                    "yellowEnd": 0,
                                    "redStart": 0,
                                    "redEnd": 0
                                },
                                "TurbineN2": {
                                    "__Type": "ColorRangeDisplay2",
                                    "Initialized": 0,
                                    "min": 0,
                                    "max": 0,
                                    "lowLimit": 0,
                                    "highLimit": 0,
                                    "greenStart": 0,
                                    "greenEnd": 0,
                                    "yellowStart": 0,
                                    "yellowEnd": 0,
                                    "redStart": 0,
                                    "redEnd": 0
                                },
                                "ITTEngineOff": {
                                    "__Type": "ColorRangeDisplay3",
                                    "Initialized": 0,
                                    "min": 0,
                                    "max": 0,
                                    "lowLimit": 0,
                                    "highLimit": 0,
                                    "lowRedStart": 0,
                                    "lowRedEnd": 0,
                                    "lowYellowStart": 0,
                                    "lowYellowEnd": 0,
                                    "greenStart": 0,
                                    "greenEnd": 0,
                                    "yellowStart": 0,
                                    "yellowEnd": 0,
                                    "redStart": 0,
                                    "redEnd": 0
                                },
                                "ITTEngineOn": {
                                    "__Type": "ColorRangeDisplay3",
                                    "Initialized": 0,
                                    "min": 0,
                                    "max": 0,
                                    "lowLimit": 0,
                                    "highLimit": 0,
                                    "lowRedStart": 0,
                                    "lowRedEnd": 0,
                                    "lowYellowStart": 0,
                                    "lowYellowEnd": 0,
                                    "greenStart": 0,
                                    "greenEnd": 0,
                                    "yellowStart": 0,
                                    "yellowEnd": 0,
                                    "redStart": 0,
                                    "redEnd": 0
                                },
                                "MainBusVoltage": {
                                    "__Type": "ColorRangeDisplay3",
                                    "Initialized": 0,
                                    "min": 0,
                                    "max": 0,
                                    "lowLimit": 0,
                                    "highLimit": 0,
                                    "lowRedStart": 0,
                                    "lowRedEnd": 0,
                                    "lowYellowStart": 0,
                                    "lowYellowEnd": 0,
                                    "greenStart": 0,
                                    "greenEnd": 0,
                                    "yellowStart": 0,
                                    "yellowEnd": 0,
                                    "redStart": 0,
                                    "redEnd": 0
                                },
                                "HotBatteryBusVoltage": {
                                    "__Type": "ColorRangeDisplay3",
                                    "Initialized": 0,
                                    "min": 0,
                                    "max": 0,
                                    "lowLimit": 0,
                                    "highLimit": 0,
                                    "lowRedStart": 0,
                                    "lowRedEnd": 0,
                                    "lowYellowStart": 0,
                                    "lowYellowEnd": 0,
                                    "greenStart": 0,
                                    "greenEnd": 0,
                                    "yellowStart": 0,
                                    "yellowEnd": 0,
                                    "redStart": 0,
                                    "redEnd": 0
                                },
                                "BatteryBusAmps": {
                                    "__Type": "ColorRangeDisplay2",
                                    "Initialized": 0,
                                    "min": 0,
                                    "max": 0,
                                    "lowLimit": 0,
                                    "highLimit": 0,
                                    "greenStart": 0,
                                    "greenEnd": 0,
                                    "yellowStart": 0,
                                    "yellowEnd": 0,
                                    "redStart": 0,
                                    "redEnd": 0
                                },
                                "GenAltBusAmps": {
                                    "__Type": "ColorRangeDisplay2",
                                    "Initialized": 0,
                                    "min": 0,
                                    "max": 0,
                                    "lowLimit": 0,
                                    "highLimit": 0,
                                    "greenStart": 0,
                                    "greenEnd": 0,
                                    "yellowStart": 0,
                                    "yellowEnd": 0,
                                    "redStart": 0,
                                    "redEnd": 0
                                },
                                "CoolantLevel": {
                                    "__Type": "RangeDisplay",
                                    "min": 0,
                                    "max": 0,
                                    "lowLimit": 0,
                                    "highLimit": 0
                                },
                                "CoolantTemperature": {
                                    "__Type": "ColorRangeDisplay3",
                                    "Initialized": 0,
                                    "min": 0,
                                    "max": 0,
                                    "lowLimit": 0,
                                    "highLimit": 0,
                                    "lowRedStart": 0,
                                    "lowRedEnd": 0,
                                    "lowYellowStart": 0,
                                    "lowYellowEnd": 0,
                                    "greenStart": 0,
                                    "greenEnd": 0,
                                    "yellowStart": 0,
                                    "yellowEnd": 0,
                                    "redStart": 0,
                                    "redEnd": 0
                                },
                                "GearOilTemperature": {
                                    "__Type": "ColorRangeDisplay2",
                                    "Initialized": 0,
                                    "min": 0,
                                    "max": 0,
                                    "lowLimit": 0,
                                    "highLimit": 0,
                                    "greenStart": 0,
                                    "greenEnd": 0,
                                    "yellowStart": 0,
                                    "yellowEnd": 0,
                                    "redStart": 0,
                                    "redEnd": 0
                                },
                                "CabinAltitude": {
                                    "__Type": "ColorRangeDisplay",
                                    "Initialized": 0,
                                    "min": 0,
                                    "max": 0,
                                    "lowLimit": 0,
                                    "highLimit": 0,
                                    "greenStart": 0,
                                    "greenEnd": 0
                                },
                                "CabinAltitudeChangeRate": {
                                    "__Type": "RangeDisplay",
                                    "min": 0,
                                    "max": 0,
                                    "lowLimit": 0,
                                    "highLimit": 0
                                },
                                "CabinPressureDiff": {
                                    "__Type": "ColorRangeDisplay",
                                    "Initialized": 0,
                                    "min": 0,
                                    "max": 0,
                                    "lowLimit": 0,
                                    "highLimit": 0,
                                    "greenStart": 0,
                                    "greenEnd": 0
                                },
                                "ThrottleLevels": {
                                    "__Type": "ThrottleLevelsInfo",
                                    "initialised": 0,
                                    "minValues": [
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0
                                    ],
                                    "names": [
                                        "",
                                        "",
                                        "",
                                        "",
                                        "",
                                        ""
                                    ]
                                },
                                "FlapsLevels": {
                                    "__Type": "FlapsLevelsInfo",
                                    "initialised": 0,
                                    "slatsAngle": [
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0
                                    ],
                                    "flapsAngle": [
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0
                                    ]
                                },
                                "TakeOffSpeeds": {
                                    "__Type": "TakeOffSpeedsInfo",
                                    "initialised": 1,
                                    "minVal": 90,
                                    "minWeight": 90,
                                    "maxVal": 100,
                                    "maxWeight": 100
                                },
                                "Misc": {
                                    "__Type": "GlassCockpitMisc",
                                    "initialised": 1,
                                    "hasGMeter": 0,
                                    "vCockpitHud": 0,
                                    "highAltitudeHud": 0,
                                    "hudAirspeedColorFromLVar": 0,
                                    "hudShowFuel": 1,
                                    "hudShowAOA": 1,
                                    "hudShowTachometer": 1,
                                    "hudShowTrim": 1,
                                    "hudSpeedInMach": 0,
                                    "equivalentAirspeedHud": 0,
                                    "hudNavyAOA": 0,
                                    "gpsAltimeterHud": 0
                                }
                            }
                        }

                    }
                    else {

                        sv = { name: name, unit: unit, dataSource: dataSource, src: src, value: 0 }
                    }
                    FSConn.variables.items[name + "/" + unit] = sv
                    FSConn.send("client/register/simvar", JSON.stringify(sv))
                    console.log("client/register/simvar " + JSON.stringify(sv))
                }
            }
            return 0
        }

        function GetSimVarRegId(name, unit, src = "") {
            ReadSimVar(name, unit, src)
            var v = Object.keys(FSConn.variables.items)
            for (var i = 0; i < v.length; i++) {
                if (name + "/" + unit == v[i]) {
                    return i
                }
            }
            return 0

        }
        class SimVarGetter {
            constructor(_name, _unit, _reftime) {
                this.SVTimer = -10000000;
                this.SVReg = -1;
                this.SVName = _name;
                this.SVunit = _unit;
                this.SVRefreshT = _reftime;
            }

            getVal() {
                return 0
            }
            toFixed(val) {
                return val
            }
            GetRegisteredId(name, unit, src = "") {
                return GetRegisteredId(name, unit, src)
            }
        }

        engine.beginProfileEvent = function (params) {
        }

        engine.endProfileEvent = function () {
        }

        engine.SendMessage22 = function (name, id) {
            var args = Array.prototype.slice.call(arguments, 2);
            var deferred = engine._ActiveRequests[id];

            delete engine._ActiveRequests[id];
            var call = function () {
                var mock = engine._mocks[name];

                if (mock !== undefined) {
                    deferred.resolve(mock.apply(engine, args));
                }
            };

            window.setTimeout(call, 16);
        };


        const timeout = 500
        engine._RequestId22 = 0
        engine._ActiveRequests22 = []

        engine.call22 = function () {
            engine._RequestId++;

            var id = engine._RequestId;
            var messageArguments = Array.prototype.slice.call(arguments);
            messageArguments.splice(1, 0, id);
            console.log((messageArguments))
            var promise = new Promise(function (resolve, reject) {
                engine._ActiveRequests[id] = {
                    resolve: resolve,
                    reject: reject,
                };
                engine.SendMessage.apply(engine, messageArguments);
            });
            return promise;
        };

        engine.callQ = ((...args) => {
            return new Promise((resolve) => {
                var call = function () {
                    resolve()
                    console.log((args))

                }

                setTimeout(call, timeout)
            }
            )
        })

        var simvar = {}
        var gamevar = simvar
        var globalvar = {}
        simvar.registerSimVarWatcher = function (name, unit, dataSource) {
            var sv = { "id": FSConn.variables.length, "src": "SimVar", "name": name, "unit": unit, "dataSource": dataSource, "value": 0, "lazy": 2 }
            variables.push()

        }
        simvar.registerGameVarWatcher = function (name, unit, dataSource) {
            var sv = { "id": FSConn.variables.length, "src": "SimVar", "name": name, "unit": unit, "dataSource": dataSource, "value": 0, "lazy": 2 }
            variables.push()

        }
        simvar.getValueReg = function (id) {
            var v = Object.keys(FSConn.variables.items)
            return FSConn.variables.get(v[id]).value
        }

        simvar.getValue = function (name, unit, param1, param2) {
            //console.log("simvar.getValue()")
            return ReadSimVar(name, unit, param1)
        }

        simvar.getValueReg_String = function (id) {
            var v = Object.keys(FSConn.variables.items)
            return FSConn.variables.get(v[id]).value
            var sv = FSConn.variables[id]
            return sv.value
        }


        SimVar.GetSimVarValue = function (name, unit, dataSource = "") {
            return ReadSimVar(name, unit, dataSource, "simvar")
        }

        SimVar.GetGameVarValue = function (name, unit, dataSource = "") {
            return ReadSimVar(name, unit, dataSource, "gamevar")
        }

        SimVar.GetGlobalVarValue = function (name, unit, dataSource = "") {
            return ReadSimVar(name, unit, dataSource, "globalvar")
        }

        var requestId = 0
        SimVar.SetSimVarValue = function (name, unit, value) {
            FSConn.send("client/simvar/set", JSON.stringify({ vname: name, vunit: unit, vval: value, dataSource: "", rid: requestId++ }));
            return new Promise(function (resolve, reject) {
                resolve();
            });
        }

        SimVar.GetRegisteredId = function (name, unit, value) {
            return GetSimVarRegId(name, unit, value)
        }

        SimVar.GetRegisteredGameVarId = function (name, unit, value) {
            return GetSimVarRegId(name, unit, value)
        }

        function GetSimVarArrayValues(simvars, callback, dataSource = "") {
            {
                if (SimVar.g_bUseWatcher) {
                    if (simvars.requestID == -1) {
                        if (simvars.instrumentID == "")
                            simvars.instrumentID = dataSource;
                        simvars.requestID = Simvars.registerSimVarArrayWatcher(simvars, simvars.instrumentID);
                    }
                    Coherent.call("getArrayValuesReq", simvars.requestID).then(callback);
                }
                else {

                    var b = SimVarBatchObjects[simvars.simVarCount + "/" + simvars.simVarIndex]

                    Coherent.call("getArrayValues", simvars.getCount(), simvars.getIndex(), simvars.getNames(), simvars.getUnits(), dataSource)
                        .then(callback);
                }
            }
        }
        SimVar.GetSimVarArrayValues = GetSimVarArrayValues;
        SimVar.registerSimVarWatcher = function () {
        }
        simvar.registerGameVarWatcher = function (name, unit, dataSource) {
        }

        class SimVarBatch {
            constructor(_simVarCount, _simVarIndex) {
                this.__Type = "SimVarBatch";
                this.wantedNames = [];
                this.wantedUnits = [];
                this.wantedTypes = [];
                this.requestID = -1;
                this.instrumentID = "";
                this.simVarCount = _simVarCount;
                this.simVarIndex = _simVarIndex;
            }
            add(_name, _unit, _type = "") {
                this.wantedNames.push(_name);
                this.wantedUnits.push(_unit);
                this.wantedTypes.push(_type);
            }
            getCount() {
                return this.simVarCount;
            }
            getIndex() {
                return this.simVarIndex;
            }
            getNames() {
                return this.wantedNames;
            }
            getUnits() {
                return this.wantedUnits;
            }
            getTypes() {
                return this.wantedTypes;
            }
        }

        var SimVarBatchObjects = {}

        class SimVarBatchExt extends SimVarBatch {
            constructor(_simVarCount, _simVarIndex) {
                super(_simVarCount, _simVarIndex)

                SimVarBatchObjects[_simVarCount + "/" + _simVarIndex] = this
            }
        }
        SimVar.SimVarBatch = SimVarBatchExt;

        //window.top["g_nameZObject"] = "aural_500ft"
        //window.top["g_nameZObject"] = "aural"
        
    </script>



    <vcockpit-panel id="panel"></vcockpit-panel>
    <div id="vignettage"
        style="pointer-events:none; border:12px solid white; position:absolute; display:none; top:0; left:0; width:100%; height:100%; z-index:5">
    </div>
    <img id="virtualmouse" src="/Icons/Mouse.svg"
        style="pointer-events:none; position:absolute; display:none; top:0; left:0; width:60px; height:60px; z-index:5" />
    <!--<div id="debugmouse" style="pointer-events:none; background-color:red; position:absolute; display:none; top:0; left:0; width:15px; height:15px; z-index:5"></div>-->


    <script>

        var instrumentSelector = "Electricity"
        function start() {
            var instrument = document.getElementById(instrumentSelector)
            if (instrument == null) {
                setTimeout(() => {
                    start()
                }, 1000);
                return
            }

            // var pfd = document.querySelector("as1000-pfd-element")
            // if(!pfd.initialized) {
            //     setTimeout(() => {
            //         start()
            //     }, 1000);
            //     return
            // }

            document.body.style.width = "unset"
            document.body.style.height = "unset"

            BaseInstrument.allInstrumentsLoaded = true
            instrument.hasBeenOff = true

            var elem = document.querySelector("glasscockpit-highlight");
            if (elem) {
                elem.style.width = "unset"
                elem.style.height = "unset"
            }

            elem = document.getElementById("Electricity")
            elem.setAttribute("state", "on")

            elem = document.getElementById("InnerMap")
            // if (elem) {
            //     elem.innerHTML = '<div id="LeafletMap" style="display: block; left: 0%; top: 0%; width:100%; height:99%;background-color: black;"></div>'
            //     var map = new LeafletMap("LeafletMap")
            //     setInterval((() => {
            //         map.onUpdate(1)
            //     }).bind(map)
            //         , 100)
            // }

            function diffAndSetAttribute(_element, _attribute, _newValue) {
                if (_element && _element.getAttribute(_attribute) != _newValue) {
                    _element.setAttribute(_attribute, _newValue);
                }
            }
            var xpdr = document.getElementById("XPDRTimeBox")
            if (xpdr) {
                xpdr.style.left = "719px"
                xpdr.style.fontSize = "8px"
            }
            var instrumentID = "as1000-pfd-element"
            var instrument = document.querySelector(instrumentID)


            // instrument.syntheticVision = false
            //instrument.mainPage.toggleSVT()
            // instrument.mainPage.init = (() => {
            //     super.init()
            //     instrument.mainPage.toggleSVT()
            // })
            diffAndSetAttribute(instrument.mainPage.attitude.svg, "background", "false");

            var airspeed = document.getElementById("Airspeed")
            airspeed.style.left = "130px"
            var altimeter = document.getElementById("Altimeter")
            altimeter.style.left = "650px"

            for (var j = 0; j < instrument.IndependentsElements.length; j++) {
                elem = instrument.IndependentsElements[j]
                if (elem.name == "SoftKeys") {
                    for (var i = 1; i <= 12; i++) {
                        var key = document.getElementById("Key" + i)
                        key.style.cursor = "pointer"
                        key.softkeys = elem.element
                        // {"vname":"H:AS1000_PFD_SOFTKEYS_6","vunit":"number", "vval": 0}
                        key.softkey1 = i //"SOFTKEYS_" + i
                        key.softkey2 = "SOFTKEYS_" + i
                        key.onclick = function (e) {

                            if (this.innerText == "REFRESH") {
                                var e = document.getElementById("Electricity")
                                e.setAttribute("state", "on")
                                SimVar.SetSimVarValue("H:AS1000_PFD_SOFTKEYS_" + this.softkey1, "number", 0)
                                //mqtt_client.client.send("sim/simvar/set", JSON.stringify({ vname: "H:AS1000_MFD_SOFTKEYS_" + this.softkey1, vunit: "number", vval: 0 }))
                            } else {
                                this.softkeys.onEvent(this.softkey2)
                            }

                        }
                    }
                }
            }


        }

        start()




    </script>

</body>

</html>