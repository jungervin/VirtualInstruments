<Window x:Class="FSComm.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:FSComm"
        mc:Ignorable="d"
        Title="MainWindow" Height="600" Width="900"
        Closing="Window_Closing"
        >
    <Grid>
        <Menu x:Name="menu" Height="Auto" VerticalAlignment="Top">
            <MenuItem  Header="_File">
                <MenuItem Header="Open..." Command="{Binding OpenCommand}"></MenuItem>
                <MenuItem Header="Save" DataContext="{Binding InstrumentsProfileViewModel}" Command="{Binding SaveProfileCommand}"></MenuItem>
                <MenuItem Header="Save as..." DataContext="{Binding InstrumentsProfileViewModel}" Command="{Binding SaveAsProfileCommand}"></MenuItem>
                <Separator></Separator>
                <MenuItem Header="Settings..." Command="{Binding SettingsCommand}"></MenuItem>
                <Separator></Separator>
                <MenuItem Header="Exit..."></MenuItem>
            </MenuItem>

        </Menu>
        <TabControl Margin="10,23,10,27">
            <TabItem Header="Main">
                <Grid >
                    <!--<GroupBox x:Name="groupBox" Header="Displays" Margin="432,292,-8,10" Width="350" >-->
                    <!--
                        <Grid>
                            <DataGrid x:Name="dgDisplays" ItemsSource="{Binding Displays}" AutoGenerateColumns="False" SelectionMode="Single" IsReadOnly="True" Margin="0,26,0,0">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Name" Binding="{Binding DisplayName}"></DataGridTextColumn>
                                    <DataGridTextColumn Header="Left" Binding="{Binding PosLeft}"></DataGridTextColumn>
                                    <DataGridTextColumn Header="Top" Binding="{Binding PosTop}"></DataGridTextColumn>
                                    <DataGridTextColumn Header="Width" Binding="{Binding PosWidth}"></DataGridTextColumn>
                                    <DataGridTextColumn Header="Height" Binding="{Binding PosHeight}"></DataGridTextColumn>
                                    <DataGridTemplateColumn>
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Button Content="Open" Cursor="Hand" Command="{Binding CommandOpen}" CommandParameter="{Binding SelectedItem, ElementName=dgDisplays}"></Button>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn>
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Button Content="Close" Cursor="Hand" Command="{Binding CommandClose}"></Button>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>

                                </DataGrid.Columns>
                            </DataGrid>
                        </Grid>

                    </GroupBox>-->
                    <GroupBox Header="Displays" Height="165" VerticalAlignment="Top" d:LayoutOverrides="VerticalAlignment" Margin="10,10,10,0">
                        <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" Margin="0,0">
                            <WrapPanel x:Name="Displays" Margin="0,0,0,0" />
                        </ScrollViewer>
                    </GroupBox>

                    <GroupBox Header="Instruments" Margin="10,180,10,31">
                        <Grid>
                            <DataGrid x:Name="InstrumentsGrid" DataContext="{Binding InstrumentsProfileViewModel}" ItemsSource="{Binding Instruments, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding SelectedIntrument, UpdateSourceTrigger=PropertyChanged}" AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" SelectionUnit="Cell" SelectionMode="Single" Margin="0,0,0,69">
                                <DataGrid.Resources>
                                    <Style TargetType="{x:Type DataGridCell}">
                                        <Style.Triggers>
                                            <Trigger Property="DataGridCell.IsSelected" Value="True">
                                                <Setter Property="Background" Value="CornflowerBlue" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>

                                    <Style x:Key="DataGridVerticalText" TargetType="TextBlock">
                                        <Setter Property="VerticalAlignment" Value="Center" />
                                    </Style>
                                </DataGrid.Resources>
                                <DataGrid.Columns>
                                    <DataGridTemplateColumn Header="Action" Width="80">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Button  x:Name="btnFindHandle" Style="{StaticResource BlueButton}" CommandParameter="{Binding}" Background="{Binding ButtonBg}" Command="{Binding Path=DataContext.GetHandleCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}">
                                                    <Button.Content>
                                                        SELECT
                                                    </Button.Content>
                                                </Button>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>


                                    <DataGridTextColumn Header="Handle" Binding="{Binding Handle}" IsReadOnly="True">
                                        <DataGridTextColumn.CellStyle>
                                            <Style TargetType="DataGridCell">
                                                <Setter Property="Background" Value="Gainsboro"></Setter>
                                                <!--<Setter  Property="Padding" Value="5 0 0 0"></Setter>-->
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type DataGridCell}">
                                                            <Grid Background="{TemplateBinding Background}">
                                                                <ContentPresenter VerticalAlignment="Center" />
                                                            </Grid>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </DataGridTextColumn.CellStyle>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn Header="Instrument" Binding="{Binding InstrumentName, Mode=TwoWay}" Width="*" ElementStyle="{StaticResource DataGridVerticalText}"></DataGridTextColumn>
                                    <DataGridTemplateColumn Header="Action" Width="80">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Button  x:Name="btnFindHandle" Style="{StaticResource BlueButton}" CommandParameter="{Binding}" Command="{Binding Path=DataContext.ReadPosCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}">
                                                    <Button.Content>
                                                        READ POS
                                                    </Button.Content>
                                                </Button>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTextColumn Header="PosX" Binding="{Binding PosX, UpdateSourceTrigger=LostFocus}" ElementStyle="{StaticResource DataGridVerticalText}"></DataGridTextColumn>
                                    <DataGridTextColumn Header="PosY" Binding="{Binding PosY, UpdateSourceTrigger=LostFocus}" ElementStyle="{StaticResource DataGridVerticalText}"></DataGridTextColumn>
                                    <DataGridTextColumn Header="Width" Binding="{Binding Width, UpdateSourceTrigger=LostFocus}" ElementStyle="{StaticResource DataGridVerticalText}"></DataGridTextColumn>
                                    <DataGridTextColumn Header="Height" Binding="{Binding Height, UpdateSourceTrigger=LostFocus}" ElementStyle="{StaticResource DataGridVerticalText}"></DataGridTextColumn>
                                    <!--<DataGridCheckBoxColumn Header="Full Screen" Binding="{Binding FullScreen, UpdateSourceTrigger=PropertyChanged}"></DataGridCheckBoxColumn>-->



                                </DataGrid.Columns>
                            </DataGrid>
                            <TextBlock Foreground="OrangeRed" Text="Click on the Select button to choose an intsrument or press right button on the mouse to cancel the method!" HorizontalAlignment="Left" Margin="14,0,0,44" Width="738" Height="20" VerticalAlignment="Bottom"/>
                            <Button Content="Add" DataContext="{Binding InstrumentsProfileViewModel}" Command="{Binding AddInstrumentCommand}" Style="{StaticResource BlueButton}" HorizontalAlignment="Left" Width="67" Height="Auto" Margin="10,0,0,6" VerticalAlignment="Bottom"/>

                        </Grid>
                    </GroupBox>
                </Grid>
            </TabItem>
            <TabItem Header="Logs">
                <Grid>
                    <TextBox x:Name="WSClients" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto"  FontFamily="Courier New" FontSize="16" Margin="10,10,10,0" Height="128" VerticalAlignment="Top" ></TextBox>
                    <TextBox x:Name="LogTextBox" TextChanged="LogTextBox_TextChanged" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" Text="{Binding Path=LogViewModel.LogText, FallbackValue=LOG}" FontFamily="Courier New" FontSize="16" Margin="10,143,10,47" ></TextBox>
                    <Button Content="Clear" Command="{Binding Path= LogViewModel.LogClearCommand}" HorizontalAlignment="Right" Margin="0,0,10,10" VerticalAlignment="Bottom" Width="131" />
                </Grid>

            </TabItem>
        </TabControl>
        <StatusBar Height="Auto" VerticalAlignment="Bottom">
            <StatusBarItem Content="HHH" ></StatusBarItem>
        </StatusBar>
    </Grid>
</Window>
